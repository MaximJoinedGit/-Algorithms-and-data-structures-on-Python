# 1. Определение количества различных подстрок с использованием хеш-функции. Пусть на вход функции дана строка.
# Требуется вернуть количество различных подстрок в этой строке.
#
# Примечания:
# * в сумму не включаем пустую строку и строку целиком;
# * без использования функций для вычисления хэша (hash(), sha1() или любой другой из модуля hashlib
# задача считается не решённой.


from hashlib import sha1


def hash_fun(text: str) -> int:
    """
    Функция подсчета количества подстрок в строке.
    :param text: Входной текст, он должен содержать хотя бы один символ.
    :return: Количество подстрок в строке.
    """
    assert len(text) > 0, 'Строка пустая!'
    sub_list = list()
    for subst in range(1, len(text)):
        for i in range(len(text) - subst + 1):
            sub_list.append(sha1(text[i:i + subst].encode('utf-8')).hexdigest())
    return len(set(sub_list))


if __name__ == '__main__':
    s = input('Введите текст: ')
    print(hash_fun(s))
